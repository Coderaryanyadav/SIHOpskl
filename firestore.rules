rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Default deny all to be secure by default
    match /{document=**} {
      allow read, write: if false;
    }
    
    // Users collection - authenticated read, user-specific write
    match /users/{userId} {
      allow read: if request.auth != null;  // Only authenticated users can read profiles
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update, delete: if request.auth != null && request.auth.uid == userId;
    }
    
    // Posts collection - authenticated read, owner write
    match /posts/{postId} {
      allow read: if request.auth != null;  // Only authenticated users can read posts
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.authorId;
      
      // Nested comments
      match /comments/{commentId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null;
        allow update, delete: if request.auth != null && 
          (request.auth.uid == resource.data.authorId || 
           request.auth.uid == get(/databases/$(database)/documents/posts/$(postId)).data.authorId);
      }
    }
    
    // Chats collection - private between users
    match /chats/{chatId} {
      allow read, create: if request.auth != null && 
        (request.auth.uid in resource.data.participants);
      allow update, delete: if false;  // Chats should not be updated or deleted
      
      // Messages subcollection
      match /messages/{messageId} {
        allow read: if request.auth != null && 
          request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
        allow create: if request.auth != null && 
          request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
      }
    }
  }
}
